// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render stateless CustomButton 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CustomButton
    clickHandler={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": undefined,
      "className": undefined,
      "disabled": undefined,
      "onClick": [MockFunction],
    },
    "ref": null,
    "rendered": null,
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
    background: rgb(248, 79, 119);
    background: linear-gradient(90deg,rgb(248, 79, 119) 50%,#397DFF 0);
    background-size: 200% 100%;
    background-position: 0 0;
    width: 100%;
    height: 100%;
    text-transform: uppercase;
    border-radius: 100px;
    font-size: 16px;
    color: white;
    text-align: center;
    font-weight: 500;
    position: relative;
    cursor: pointer;
    animation: ",
          Keyframes {
            "id": "sc-keyframes-iiVkJS",
            "inject": [Function],
            "name": "iiVkJS",
            "rules": Array [
              "@-webkit-keyframes iiVkJS{from{background-position:-100% 0;}to{background-position:-200% 0;}}",
              "@keyframes iiVkJS{from{background-position:-100% 0;}to{background-position:-200% 0;}}",
            ],
            "toString": [Function],
          },
          " .3s;
    &:after {
        content: url(",
          "dots.svg",
          ");
        position: absolute;
        top: 50%;
        right: 25px;
        transform: translateY(-50%);
    }
    &:hover {
        animation: ",
          Keyframes {
            "id": "sc-keyframes-gDHVRy",
            "inject": [Function],
            "name": "gDHVRy",
            "rules": Array [
              "@-webkit-keyframes gDHVRy{from{background-position:0 0;}to{background-position:-100% 0;}}",
              "@keyframes gDHVRy{from{background-position:0 0;}to{background-position:-100% 0;}}",
            ],
            "toString": [Function],
          },
          " .3s;
        animation-fill-mode: forwards;
    }
",
        ],
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": undefined,
        "className": undefined,
        "disabled": undefined,
        "onClick": [MockFunction],
      },
      "ref": null,
      "rendered": null,
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    background: rgb(248, 79, 119);
    background: linear-gradient(90deg,rgb(248, 79, 119) 50%,#397DFF 0);
    background-size: 200% 100%;
    background-position: 0 0;
    width: 100%;
    height: 100%;
    text-transform: uppercase;
    border-radius: 100px;
    font-size: 16px;
    color: white;
    text-align: center;
    font-weight: 500;
    position: relative;
    cursor: pointer;
    animation: ",
            Keyframes {
              "id": "sc-keyframes-iiVkJS",
              "inject": [Function],
              "name": "iiVkJS",
              "rules": Array [
                "@-webkit-keyframes iiVkJS{from{background-position:-100% 0;}to{background-position:-200% 0;}}",
                "@keyframes iiVkJS{from{background-position:-100% 0;}to{background-position:-200% 0;}}",
              ],
              "toString": [Function],
            },
            " .3s;
    &:after {
        content: url(",
            "dots.svg",
            ");
        position: absolute;
        top: 50%;
        right: 25px;
        transform: translateY(-50%);
    }
    &:hover {
        animation: ",
            Keyframes {
              "id": "sc-keyframes-gDHVRy",
              "inject": [Function],
              "name": "gDHVRy",
              "rules": Array [
                "@-webkit-keyframes gDHVRy{from{background-position:0 0;}to{background-position:-100% 0;}}",
                "@keyframes gDHVRy{from{background-position:0 0;}to{background-position:-100% 0;}}",
              ],
              "toString": [Function],
            },
            " .3s;
        animation-fill-mode: forwards;
    }
",
          ],
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
