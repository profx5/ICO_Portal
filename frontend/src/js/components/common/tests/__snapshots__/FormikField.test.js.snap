// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render stateless FormikField 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormikField />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef />,
        <FormikConnect(FieldInner)
          render={[Function]}
        />,
        undefined,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            undefined,
            undefined,
          ],
          "htmlFor": undefined,
        },
        "ref": null,
        "rendered": Array [
          undefined,
          undefined,
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
    color: #0a0a0a;
    font-size: 16px;
    display: block;
    margin-bottom: 13px;
    white-space: nowrap;
    ",
              "@media (max-width: 767px)",
              " {
        font-size: 12px;
    }
    span {
        color: red;
    }
",
            ],
          },
          "displayName": "styled.label",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "label",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "name": undefined,
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;
    height: 100%;
    label + div {
       height: 100%;
       input {
            color: #233539;
            font-size: 16px;
            font-weight: 500;
            padding: 0 20px;
            display: block;
            height: 100%;
            width: 100%;
            background: #ffffff;
            border: 1px solid #d6dfe6;
            border-radius: 2px;
            &::-webkit-input-placeholder {
                color: rgba(10,10,10,.4);
            }
       }
    }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef />,
          <FormikConnect(FieldInner)
            render={[Function]}
          />,
          undefined,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              undefined,
              undefined,
            ],
            "htmlFor": undefined,
          },
          "ref": null,
          "rendered": Array [
            undefined,
            undefined,
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
    color: #0a0a0a;
    font-size: 16px;
    display: block;
    margin-bottom: 13px;
    white-space: nowrap;
    ",
                "@media (max-width: 767px)",
                " {
        font-size: 12px;
    }
    span {
        color: red;
    }
",
              ],
            },
            "displayName": "styled.label",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "label",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": undefined,
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": true,
          "rules": Array [
            "
    position: relative;
    height: 100%;
    label + div {
       height: 100%;
       input {
            color: #233539;
            font-size: 16px;
            font-weight: 500;
            padding: 0 20px;
            display: block;
            height: 100%;
            width: 100%;
            background: #ffffff;
            border: 1px solid #d6dfe6;
            border-radius: 2px;
            &::-webkit-input-placeholder {
                color: rgba(10,10,10,.4);
            }
       }
    }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
